# Main Configuration

[general]
# User IDs added here will have 'op' level permissions.
# ONLY ADD USERS YOU TRUST HERE AS THEY CAN BYPASS ALL RESTRICTIONS!
ownerIDs = []
# Use Legacy API URL
# If the bot stops responding on the main API base URL, enable this.
# ONLY USE IF FAILING TO LOGIN TO DISCORD MAIN API URL!
useLegacyURL = false

[modules]
# Master module configuration.
# Set these to enable or disable specific modules across all instances.
enableAutoMod = true
enableChatBot = true
enableEconomy = false
enableMusicBot = false
enableNotifier = true

[advanced]
# Advanced setup options.
# Deploy commands configuration. ONLY USE IF HOSTING THIS YOURSELF!
# Client ID for your bot user. 
# You can obtain this from discord.com/developers/applications or enabling developer mode on the client and right clicking your bot user.
clientID = ''
# Test Guild ID to deploy commands to.
# This is where you can test the commands.
guildID = ''
# Bot debug mode. [WARNING! This is a DEVELOPER only setting!]
# Use this only for debugging the bot as this reveals sensitive data!
debug = false
# To enable console output in debug mode, pass logLevel=debug as environment variable.

[runtime]
# Bot runtime mode.
# Set this to 'false' to use local toml configuration files instead.
# ONLY CHANGE THIS IF YOU OWN THE HOST SYSTEM OR TRUST ITS SECURITY!
useDotEnv = <DOTENV>
# Force update commands.
# Only enable this IF you are changing versions which include command updates/changes.
forceUpdateCmds = false

[dashboard]
# Bot Dashboard.
# Dashboard settings to enable it and set ports.
enableDash = false
# Dashboard port. Default is '3000'.
dashSrvPort = 3000
# Dashboard domain. This is where your 'site' for your dashboard will be.
dashDomain = <DASHDOMAIN>
# CSP options. reportOnly logs Content Security Protocols response in browser console.
reportOnly = true