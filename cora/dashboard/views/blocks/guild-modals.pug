// All settings variables for handling settings data.
- var enableAutoMod = (autoModSettings.enableAutoMod) ? 'on' : 'off';
- var enableChatBot = (chatBotSettings.enableChatBot) ? 'on' : 'off';
- var enableNotifier = (announcerSettings.enableNotifier) ? 'on' : 'off';
//- var enableBotLogs = (botLogSettings.enableBotLogs) ? 'on' : 'off';
//- var enableModLogs = (modLogSettings.enableModLogs) ? 'on' : 'off';

// Manage Page Modals (Edit Settings)
#settingAutoModBotModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='#settingAutoModBotModalLabel' aria-hidden='true')
  form(action=`/dashboard/${guild.id}/manage`, method='POST')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#settingAutoModBotModalLabel.modal-title Edit Settings
          button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body
          .form-check
            label.form-check-label
              if (enableAutoMod==='on')
                input#optionsRadios1.form-check-input(type='radio' name='enableAutoMod' value='on' checked='')
                | Enable
              else
                input#optionsRadios1.form-check-input(type='radio' name='enableAutoMod' value='on')
                | Enable
          .form-check
            label.form-check-label
              if (enableAutoMod==='off')
                input#optionsRadios2.form-check-input(type='radio' name='enableAutoMod' value='off' checked='')
                | Disable
              else 
                input#optionsRadios2.form-check-input(type='radio' name='enableAutoMod' value='off')
                | Disable
          .form-group
            label.form-label.mt-4(for='channelsList') 
            | Channels List (Will only accepts channel IDs)
            br
            | Separate using commas between each one like this: 12345678901234567, 12345678901234567
            input#channelsList.form-control(type='text' name='channelsList' value=autoModSettings.channelsList.join(",") )
          .form-group
            label.form-label.mt-4(for='urlsBlacklist') 
            | URLs Blacklist
            br
            | These can be generalised or specific URLs.       
            br
            | Example URLs: i.imgur.com/, www.tenor.com/, etc.
            input#urlsBlacklist.form-control(type='text' name='urlsBlacklist' value=autoModSettings.urlBlacklist.join(",") )
          .form-check.form-switch
            p Media Removal Settings
            if (autoModSettings.mediaOptions.removeUrls)
              input#removeUrlsSwitch.form-check-input(type='checkbox' name='removeUrls' checked='')
              label.form-check-label(for='removeUrlsSwitch') Remove Links/URLs?
            else
              input#removeUrlsSwitch.form-check-input(type='checkbox' name='removeUrls')
              label.form-check-label(for='removeUrlsSwitch') Remove Links/URLs?
            br
            if (autoModSettings.mediaOptions.removeGifs)
              input#removeGifsSwitch.form-check-input(type='checkbox' name='removeGifs' checked='')
              label.form-check-label(for='removeGifsSwitch') Remove Gifs?
            else
              input#removeGifsSwitch.form-check-input(type='checkbox' name='removeGifs')
              label.form-check-label(for='removeGifsSwitch') Remove Gifs?
            br
            if (autoModSettings.mediaOptions.removeImgs)
              input#removeImgsSwitch.form-check-input(type='checkbox' name='removeImgs' checked='')
              label.form-check-label(for='removeImgsSwitch') Remove Images?
            else
              input#removeImgsSwitch.form-check-input(type='checkbox' name='removeImgs')
              label.form-check-label(for='removeImgsSwitch') Remove Images?
            br
            if (autoModSettings.mediaOptions.removeVids)
              input#removeVidsSwitch.form-check-input(type='checkbox' name='removeVids' checked='' disabled='')
              label.form-check-label(for='removeVidsSwitch') Remove Videos? (EXPERIMENTAL)
            else
              input#removeVidsSwitch.form-check-input(type='checkbox' name='removeVids' disabled)
              label.form-check-label(for='removeVidsSwitch') Remove Videos? (EXPERIMENTAL)
          .form-group
            label.form-label(for='placeholder') WIP! More coming soon. ;)
        .modal-footer
          button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
          button.btn.btn-outline-primary(type='submit' value="Submit") SAVE CHANGES 
            i.fas.fa-save(aria-hidden='true')
#settingBotNotifsModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='#settingSmartChatBotModalLabel' aria-hidden='true')
  form(action=`/dashboard/${guild.id}/manage`, method='POST')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#settingBotNotifsModalLabel.modal-title Edit Settings
          button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
        .modal-body
          p.lead Bot Notifications Settings
          .form-check
            label.form-check-label
              if (enableNotifier==='on')
                input#optionsRadios1.form-check-input(type='radio' name='enableNotifier' value='on' checked='')
                | Enable
              else
                input#optionsRadios1.form-check-input(type='radio' name='enableNotifier' value='on')
                | Enable
          .form-check
            label.form-check-label
              if (enableNotifier==='off')
                input#optionsRadios2.form-check-input(type='radio' name='enableNotifier' value='off' checked='')
                | Disable
              else 
                input#optionsRadios2.form-check-input(type='radio' name='enableNotifier' value='off')
                | Disable
          .form-check.form-switch
            p Event Tracking Settings
            if (announcerSettings.events.join)
              input#userJoinToggle.form-check-input(type='checkbox' name='userJoin' checked='')
              label.form-check-label(for='userJoinToggle') Track User Joins?
            else
              input#userJoinToggle.form-check-input(type='checkbox' name='userJoin')
              label.form-check-label(for='userJoinToggle') Track User Joins?
            br
            if (announcerSettings.events.leave)
              input#userLeaveToggle.form-check-input(type='checkbox' name='userLeave' checked='')
              label.form-check-label(for='userLeaveToggle') Track User Leaves?
            else
              input#userLeaveToggle.form-check-input(type='checkbox' name='userLeave')
              label.form-check-label(for='userLeaveToggle') Track User Leaves?
            br
            if (announcerSettings.events.kick)
              input#userKickToggle.form-check-input(type='checkbox' name='userKick' checked='')
              label.form-check-label(for='userKickToggle') Track User Kicked?
            else
              input#userKickToggle.form-check-input(type='checkbox' name='userKick')
              label.form-check-label(for='userKickToggle') Track User Kicked?
            br
            if (announcerSettings.events.ban)
              input#userBanToggle.form-check-input(type='checkbox' name='userBan' checked='')
              label.form-check-label(for='userBanToggle') Track User Banned?
            else
              input#userBanToggle.form-check-input(type='checkbox' name='userBan')
              label.form-check-label(for='userBanToggle') Track User Banned?
          .form-group
            label.form-label.mt-4(for='joinMessage') Join Message
            input#joinMessage.form-control(type='text' value=announcerSettings.eventMessages.userJoin)
          .form-group
            label.form-label.mt-4(for='leaveMessage') Leave Message
            input#leaveMessage.form-control(type='text' value=announcerSettings.eventMessages.userLeave)
          .form-group
            label.form-label.mt-4(for='kickMessage') Kick Message
            input#kickMessage.form-control(type='text' value=announcerSettings.eventMessages.userKick)
          .form-group
            label.form-label.mt-4(for='banMessage') Ban Message
            input#banMessage.form-control(type='text' value=announcerSettings.eventMessages.userBan)
          .form-group
            label.form-label(for='placeholder') WIP! More coming soon. ;)
        .modal-footer
          button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
          button.btn.btn-outline-primary(type='submit' value="Submit") SAVE CHANGES 
            i.fas.fa-save(aria-hidden='true')
#settingSmartChatBotModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='#settingSmartChatBotModalLabel' aria-hidden='true')
  form(action=`/dashboard/${guild.id}/manage`, method='POST')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#settingSmartChatBotModalLabel.modal-title Edit Settings
          button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
        .modal-body
          .form-check
            label.form-check-label
              if (enableChatBot==='on')
                input#optionsRadios1.form-check-input(type='radio' name='enableChatBot' value='on' checked='')
                | Enable
              else
                input#optionsRadios1.form-check-input(type='radio' name='enableChatBot' value='on')
                | Enable
          .form-check
            label.form-check-label
              if (enableChatBot==='off')
                input#optionsRadios2.form-check-input(type='radio' name='enableChatBot' value='off' checked='')
                | Disable
              else 
                input#optionsRadios2.form-check-input(type='radio' name='enableChatBot' value='off')
                | Disable
          .form-group
            label.form-label.mt-4(for='chatChannels') 
              | Chat Channels (Will only accepts channel IDs)
              br
              | Separate using commas between each one like this: 12345678901234567, 12345678901234567
            input#chatChannels.form-control(type='text' name='chatChannels' value=(chatBotSettings.chatChannels)? `${chatBotSettings.chatChannels.join(",")}`:'' )
          .form-group
            label.form-label(for='placeholder') WIP! More coming soon. ;)
        .modal-footer
          button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
          button.btn.btn-outline-primary(type='submit' value="Submit") SAVE CHANGES 
            i.fas.fa-save(aria-hidden='true')
// Manage Page Modals (Danger Zone)
#serverLeaveModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='serverLeaveModalLabel' aria-hidden='true')
  .modal-dialog(role='document')
    .modal-content
      .modal-header
        h5#serverLeaveModalLabel.modal-title Leave Server?
        button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        p
          | Are you sure you want #{bot.user.username} to leave this server?
      .modal-footer
        button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
        a.btn.btn-outline-danger(href=`/dashboard/${guild.id}/leave` role='button') LEAVE
#settingsResetModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='settingsResetModalLabel' aria-hidden='true')
  .modal-dialog(role='document')
    .modal-content
      .modal-header
        h5#settingsResetModalLabel.modal-title Reset Settings?
        button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        p
          | Are you sure you want to reset to the default settings?
      .modal-footer
        button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
        a.btn.btn-outline-danger(href=`/dashboard/${guild.id}/reset` role='button') RESET
// Members Page Modals (Action Kick/Ban)
#memberBanModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='memberBanModalLabel' aria-hidden='true')
  .modal-dialog(role='document')
    .modal-content
      .modal-header
        h5#memberBanModal.modal-title Kick User?
        button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
      .modal-body
        p.main
          | Are you sure you want to ban this user?
          br
          | They will not be able to rejoin on this account.
      .modal-footer
        button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
        a.btn.btn-outline-danger(href=`/dashboard/${guild.id}/ban` role='button') CONFIRM
#memberKickModal.modal.fade(data-bs-backdrop='static' data-bs-keyboard='false' tabindex='-1' role='dialog' aria-labelledby='memberKickModalLabel' aria-hidden='true')
  .modal-dialog(role='document')
    .modal-content
      .modal-header
        h5#memberKickModal.modal-title Kick User?
        button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
          span(aria-hidden='true') &times;
      .modal-body
        p.main
          | Are you sure you want to kick this user?
          br
          | They can rejoin with a valid invite link later.
      .modal-footer
        button.btn.btn-outline-secondary(type='button' data-bs-dismiss='modal') CANCEL
        a.btn.btn-outline-danger(href=`/dashboard/${guild.id}/kick` role='button') CONFIRM
script(nonce="memberModals").
  var memberBanModal = document.getElementById('memberBanModal')
  var memberKickModal = document.getElementById('memberKickModal')
  // Member Modal Listeners
  memberBanModal.addEventListener('show.bs.modal', function (event) {
    var button = event.relatedTarget; var guildID = '#{guild.id}';
    var memberID = button.getAttribute('data-bs-memberid'); 
    var confirmBtn = memberBanModal.querySelector('a.btn.btn-outline-danger')
    confirmBtn.href = `/dashboard/${guildID}/kick/${memberID}`
  });
  memberKickModal.addEventListener('show.bs.modal', function (event) {
    var button = event.relatedTarget; var guildID = '#{guild.id}'
    var memberID = button.getAttribute('data-bs-memberid');
    var confirmBtn = memberKickModal.querySelector('a.btn.btn-outline-danger')
    confirmBtn.href = `/dashboard/${guildID}/kick/${memberID}`
  });